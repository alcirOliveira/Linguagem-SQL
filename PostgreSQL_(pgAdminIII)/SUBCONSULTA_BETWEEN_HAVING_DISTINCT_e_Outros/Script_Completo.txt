-- criando tabela departamento
CREATE TABLE departamento(
   idDept   INTEGER     NOT NULL PRIMARY KEY,
   nomedept VARCHAR(20) NOT NULL,
   local    CHAR(2)     NOT NULL
);

-- Inserindo dados na tabela departamento
INSERT INTO departamento VALUES(1,  'Marketing',     'SP');
INSERT INTO departamento VALUES(2,  'Financeiro',    'SP');
INSERT INTO departamento VALUES(3,  'Informática',   'MG');
INSERT INTO departamento VALUES(4,  'Produção',      'SP');
INSERT INTO departamento VALUES(5,  'Vendas',        'RJ');
INSERT INTO departamento VALUES(6,  'Compras',       'SP');
INSERT INTO departamento VALUES(7,  'RH',            'RJ');
INSERT INTO departamento VALUES(8,  'Almoxarifado',  'RJ');
INSERT INTO departamento VALUES(9,  'Engenharia',    'MG');
INSERT INTO departamento VALUES(10, 'Contabilidade', 'SP');

-- Selecionando todos os registros da tabela departamento
SELECT * FROM departamento;


-- criando tabela funcionário
CREATE TABLE funcionario(
   idFunc INTEGER       NOT NULL PRIMARY KEY,
   nomeFunc VARCHAR(30) NOT NULL,
   cargo VARCHAR(15)    NOT NULL,
   idGer INTEGER,
   dataAdm DATE         NOT NULL,
   sal NUMERIC(7,2)     NOT NULL,
   com NUMERIC(7,2),
   idDept INTEGER       NOT NULL
);

INSERT INTO funcionario VALUES (1,  'Antônio Nunes',    'Programador', 3,    '10/10/2000', 3400.00, 600.00,  3);
INSERT INTO funcionario VALUES (2,  'Vilmar Almeida',   'Analista',    2,    '01/01/1999', 4300.00, NULL,    5);
INSERT INTO funcionario VALUES (3,  'Mauro Mendonça',   'Gerente',     3,    '10/04/1998', 6500.00, 2500.00, 1);
INSERT INTO funcionario VALUES (4,  'Paulo Gonçalves',  'Auxiliar',    5,    '09/02/1998', 1200.00, 640.00,  3);
INSERT INTO funcionario VALUES (5,  'Rogério Meira',    'Gerente',     5,    '09/06/1999', 6400.00, 6700.00, 4);
INSERT INTO funcionario VALUES (6,  'Lima Dantes',      'Analista',    1,    '10/10/2000', 3400.00, 470.00,  3);
INSERT INTO funcionario VALUES (7,  'Ana Paula',        'Presidente',  NULL, '09/04/1996', 8800.00, 3440.00, 5);
INSERT INTO funcionario VALUES (8,  'Mauricio Souza',   'Auxiliar',    2,    '03/02/1993', 1500.00, 8340.00, 6);
INSERT INTO funcionario VALUES (9,  'José Ignácio',     'Supervisor',  2,    '06/02/1994', 4400.00, 440.00,  6);
INSERT INTO funcionario VALUES (10, 'Victor Lima',      'Auxiliar',    1,    '30/06/2000', 2000.00, 340.00,  1);
INSERT INTO funcionario VALUES (11, 'Luis Serra',       'Programador', 2,    '08/07/1997', 3200.00, 6640.00, 2);
INSERT INTO funcionario VALUES (12, 'José Silva',       'Gerente',     2,    '09/05/2000', 7000.00, NULL,    3);

-- Selecionando todos os registros da tabela funcionario
SELECT * FROM funcionario;

----------------------------------------------------------------------------------
-- ORDER BY e DISTINCT

-- Listando os cargos que existem na empresa (sem duplicidade) em ordem alfabética
SELECT 
   DISTINCT cargo
FROM funcionario
ORDER BY Cargo;

-- Listando o código, nome e salário dos empregados em ordem alfabética de nome
SELECT
   idFunc,
   nomeFunc,
   sal  
FROM funcionario
ORDER BY nomeFunc;

-- Listando o código, nome e salário dos empregados em ordem do maior para o menor salário da empresa
SELECT
   idFunc,
   nomeFunc,
   sal
FROM funcionario 
ORDER BY sal DESC;

-- Listando o nome do empregado, código do departamento e data de início na empresa, ordenando o resultado por nome
SELECT
   nomeFunc,
   idDept,
   dataAdm
FROM funcionario 
ORDER BY nomeFunc ;

-- Listando as localidades dos departamentos existentes, sem repetição e em ordem alfabética
SELECT
   DISTINCT local
FROM departamento
ORDER BY local;

-- Listando o nome, salário atual e o novo salário (supondo que fosse 11,5% de aumento) para todos os funcionários
SELECT
   nomefunc,
   sal AS Salario_Atual,
   sal*1.15 AS Salario_Novo
FROM funcionario;

-- Listando o código do empregado, o nome, a data de início e salário ordenando o resultado de forma decrescente pela coluna 4
SELECT
   idFunc,
   nomeFunc,
   dataAdm,
   sal
FROM funcionario
ORDER BY 4 DESC;

-- Listando os códigos e os empregados que ganham entre 3000,00 e 5000,00
SELECT
   idFunc,
   nomeFunc
FROM funcionario
WHERE sal > 3000 AND sal < 5000;

-- Listando o código do empregado, o nome, data de início e salário somente dos funcionários que são gerentes. O resultado deve ser apresentado em ordem alfabética de nome
SELECT
   idFunc, 
   nomeFunc, 
   dataAdm, 
   sal
FROM funcionario
WHERE cargo = 'Gerente'
ORDER BY nomeFunc ASC;

-- Listando os departamentos da empresa que estão localizados no estado de São Paulo e Rio de Janeiro em ordem alfabética
SELECT
   nomeDept,
   local
FROM departamento
WHERE local = 'SP'
OR local = 'RJ'
ORDER BY nomeDept ASC;

----------------------------------------------------------------------------------
-- BETWEEN, IN, IS e LIKE

-- Listando os nomes e salário dos funcionários que ganham entre 1000,00 e 4000,00 de salário
SELECT
   nomeFunc,
   sal
FROM funcionario
WHERE sal BETWEEN 1000.00 AND 4000.00;
-- Ou WHERE sal BETWEEN 1000 AND 4000;

-- Listando os dados dos funcionários que não ganham entre 5000,00 e 10000,00 de salário
SELECT * 
FROM funcionario
WHERE sal NOT BETWEEN 5000 AND 10000;

-- Listando os nomes e comissões dos funcionários que ganham comissão de 440,00 e 640,00
SELECT
   nomeFunc,
   com
FROM funcionario
WHERE com IN (440,640);

-- Listando os dados dos funcionários que não ganham salário de 3400,00 e 4400,00
SELECT *
FROM funcionario
WHERE sal NOT IN (3400,4400);

-- Listando os nomes dos funcionários que não ganham comissão
SELECT
   nomeFunc
FROM funcionario
WHERE com IS NULL;

-- Listando os nomes dos funcionários que ganham comissão
SELECT
   nomefunc
FROM funcionario
WHERE com IS NOT NULL;

-- Listando os dados dos funcionários cujo nome se inicie com a letra “A” 
SELECT *
FROM funcionario 
WHERE nomeFunc LIKE 'A%';

-- Listando os dados dos funcionários cujo nome finalize com a letra “s”
SELECT *
FROM funcionario
WHERE nomeFunc LIKE '%s';

-- Listando os dados dos funcionários cuja segunda letra do nome seja “o”
SELECT *
FROM funcionario
WHERE nomeFunc LIKE '_o%';

-- Listando os nomes dos funcionários que não tenham a letra “i”
SELECT *
FROM funcionario
WHERE nomeFunc NOT LIKE '%i%';
 
-- Listando os nomes dos funcionários que tenham a letra “e” ou a letra “u” no nome
SELECT nomeFunc
FROM funcionario
WHERE nomeFunc LIKE '%e%' 
OR nomeFunc LIKE '%u%';

-- Listando os nomes dos funcionários que tenham a letra “e” e a letra “u” no nome
SELECT nomeFunc
FROM funcionario
WHERE nomeFunc LIKE  '%e%'
AND nomefunc like '%u%';

-- Listando os dados dos funcionários cuja a letra “n” no nome é a antepenúltima
SELECT *
FROM funcionario
WHERE nomeFunc LIKE '%n__';

-- Listando os dados dos funcionários que tenham o nome “Lima”
SELECT *
FROM funcionario
WHERE nomeFunc LIKE '%Lima%';


----------------------------------------------------------------------------------
-- FUNÇÕES DE AGREGAÇÃO: COUNT,  MAX,  MIN, SUM e AVG

-- Listando a quantidade de empregados: 
SELECT 
   COUNT(*) AS Total_nomeFunc
FROM funcionario;

-- Listando a quantidade de empregados no departamento de Informática
SELECT
   COUNT(*) AS TOTAL_nomeFunc
FROM funcionario
WHERE idDept = 3;

-- Listando a quantidade de departamentos cadastrados
SELECT
   COUNT(*) AS Total_Depto
FROM departamento ;

-- Listando a quantidade de comissões pagas
SELECT
   COUNT(com) AS QTD_com
FROM funcionario;

-- Listando o maior e o menor salário da empresa
SELECT
   MAX(sal) AS Maior_Salario,
   MIN(sal) AS Menor_Salario
FROM funcionario;

-- Listando a maior comissão paga para os empregados
SELECT
 MAX(com) AS Maior_Comissao
FROM funcionario;

-- Listando a soma dos salários de todos os funcionários
SELECT
   SUM(sal) AS Soma_dos_Salarios
FROM funcionario;

-- Listando a média dos salários de todos os funcionários
SELECT
   AVG(sal) AS Media_dos_Salarios
FROM funcionario;

-- Listando o menor, maior e a média salarial do departamento informática
SELECT
   MIN(sal) AS Menor_Salario,
   MAX(sal) AS Maior_Salario,
   AVG(sal) AS Media_Salarial
FROM funcionario
WHERE idDept = 3;


----------------------------------------------------------------------------------
-- GROUP BY e HAVING

-- Selecionando a quantidade de empregados por departamento
SELECT
   iddept,
   COUNT(*) AS Quantidade
FROM funcionario
GROUP BY idDept;

-- Selecionando a quantidade de empregados por departamento que ganham comissão
SELECT
   idDept,
   COUNT(*) AS Quantidade
FROM funcionario
WHERE com IS NOT NULL
GROUP BY idDept;

-- Selecionando a quantidade de empregados por departamento que começaram a trabalhar depois de 01/01/1998
SELECT
   idDept,
   COUNT(*) AS Quantidade
FROM funcionario
WHERE dataAdm > '01/01/1998'
GROUP BY idDept;

-- Selecionando a quantidade de empregados que existem em cada cargo
SELECT
   cargo,
   COUNT(*) AS Quantidade
FROM funcionario
GROUP BY cargo;

-- Selecionando os cargos que possuem mais de dois empregados
SELECT
   cargo,
   COUNT(*) AS Quantidade
FROM funcionario
GROUP BY cargo
HAVING COUNT(*) > 2;

-- Selecionando os departamentos que possuem mais de um empregado
SELECT
   iddept,
   COUNT(*) AS Quantidade
FROM funcionario
GROUP BY idDept
HAVING COUNT(*) > 1;

-- Selecionando maior salário em cada cargo
SELECT
   cargo,
   MAX(sal) AS Maior_salario
FROM funcionario
GROUP BY cargo;

-- Selecionando menor salário em cada cargo
SELECT
   cargo,
   MIN(sal) AS Menor_salario
FROM funcionario
GROUP BY cargo;

-- Selecionando a média de salário em cada cargo
SELECT
   cargo,
   AVG(sal) AS Media_salario
FROM funcionario
GROUP BY cargo;

-- Selecionando a média maior que o valor de 3000
SELECT
   cargo,
   AVG(sal) AS Media_salario
FROM funcionario
GROUP BY cargo
HAVING AVG(sal) > 3000;


----------------------------------------------------------------------------------
-- SUBCONSULTA (subquery)

-- Selecionando o nome do funcionário com o maior salário da empresa
SELECT
   nomeFunc,
   sal
FROM funcionario
WHERE sal = (
              SELECT 
                 MAX(sal)
              FROM funcionario
            );

-- Selecionando o nome e salário dos funcionários cujo salário é 8 vezes menor que a soma das comissões
SELECT
   nomeFunc,
   sal 
FROM funcionario
WHERE sal < (
              SELECT
                 sum(com) / 8
              FROM funcionario
            );

-- Selecionando os funcionários que pertencem ao departamento de código 6
SELECT
   nomeFunc
FROM funcionario
WHERE idDept in (
                  SELECT
                     idDept
                  FROM funcionario
                  WHERE idDept = 6
                );

-- Selecionando os funcionários que não pertencem ao departamento de código 3, em ordem alfabética
SELECT
   nomeFunc
FROM funcionario
WHERE idDept NOT IN (
                      SELECT
                         idDept
                      FROM funcionario
                      WHERE idDept = 3
                    ) 
ORDER BY nomeFunc;

-- Selecionando o departamento que pagou a menor comissão
SELECT
   idDept
FROM funcionario
WHERE com = (
              SELECT
                 MIN(com)
              FROM funcionario
            );

-- Selecionando o funcionário, com seu cargo, que ganhou o maior salário (salário mais comissão)
SELECT
   nomeFunc,
   cargo
FROM funcionario
WHERE sal + com = (
                    SELECT
                       MAX(sal + com)
                    FROM funcionario
                  );

-- Selecionando os funcionários que receberam comissões acima da média
SELECT
   nomeFunc,
   com
FROM funcionario
WHERE com > (
              SELECT
                 AVG(com)
              FROM funcionario
            );